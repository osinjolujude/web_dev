# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Soccer_Blog_By_Mayowa

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# permissions:
#   contents: read

jobs:
  build:
    runs-on: self-hosted
    timeout-minutes: 30

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        echo "-----------------=- preparing project environment -=------------------"
        sudo apt update
        sudo apt-get install docker.io -y
        python3 --version
        docker -v
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        echo ********************INSTALLATION PACKAGE COMPLETE****************************
    - name: Print Working directory(If not root, CD into Root)
      run: |
        pwd
        whoami
        ls -a
    # - name: SonarQube Scan
    #   uses: sonarsource/sonarqube-scan-action@v1
    #   env:
    #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    #     SONAR_HOST_URL: ""
    #     # -Dsonar.qualitygate.wait: true
    #     # -Dproject.settings: ./sonar-project.properties
    #     # -Dsonar.projectKey: Soccer_Blog
    #     run: |
    #       sonar-scanner \
    #         -Dsonar.projectKey=Soccer_Blog 
    #         # -Dsonar.qualitygate.wait: true
    #         # -Dproject.settings: ./sonar-project.properties
    #         # -Dsonar.projectKey: Soccer_Blog
    #       echo ********SONAR HAS COMPLETED ANAYSIS*************
    #     # stop the build if there are Python syntax errors or undefined names
    #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    #     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
    #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    # - name: Test with pytest
    #   run: |
    #     pytest

    - name: Cache SonarQube binaries
      uses: actions/cache@v2
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: Install SonarQube scanner
      run: |
        export SONAR_SCANNER_VERSION=4.6.2.2472
        curl -sSLo sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-${SONAR_SCANNER_VERSION}-linux.zip
        unzip -o sonar-scanner.zip -d $HOME/.sonar/
        export PATH=$HOME/adminuser/.sonar/sonar-scanner-${SONAR_SCANNER_VERSION}-linux/bin:$PATH

    - name: Run SonarQube analysis
      env:
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
          pwd
          whoami
          /home/adminuser/.sonar/sonar-scanner-4.6.2.2472-linux/bin/sonar-scanner \
          -Dsonar.projectKey=Soccer_Blog \
          -Dsonar.sources=. \
          -Dsonar.host.url=${{ env.SONAR_HOST_URL }} \
          -Dsonar.login=${{ env.SONAR_TOKEN }}
      
